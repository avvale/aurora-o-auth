enum OAuthClientGrantType {
    AUTHORIZATION_CODE
    CLIENT_CREDENTIALS
    PASSWORD
    REFRESH_TOKEN
}


type OAuthClient
{
    id: ID!
    grantType: OAuthClientGrantType!
    name: GraphQLString!
    secret: GraphQLString!
    authUrl: GraphQLString
    redirect: GraphQLString
    scopeOptions: JSON
    expiredAccessToken: GraphQLInt
    expiredRefreshToken: GraphQLInt
    isActive: GraphQLBoolean!
    isMaster: GraphQLBoolean!
    applications: [OAuthApplication]
    accessTokens: [OAuthAccessToken]
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input OAuthCreateClientInput
{
    id: ID!
    grantType: OAuthClientGrantType!
    name: GraphQLString!
    secret: GraphQLString!
    authUrl: GraphQLString
    redirect: GraphQLString
    scopeOptions: JSON
    expiredAccessToken: GraphQLInt
    expiredRefreshToken: GraphQLInt
    isActive: GraphQLBoolean!
    isMaster: GraphQLBoolean!
    applicationIds: [ID]
}

input OAuthUpdateClientByIdInput
{
    id: ID!
    grantType: OAuthClientGrantType
    name: GraphQLString
    secret: GraphQLString
    authUrl: GraphQLString
    redirect: GraphQLString
    scopeOptions: JSON
    expiredAccessToken: GraphQLInt
    expiredRefreshToken: GraphQLInt
    isActive: GraphQLBoolean
    isMaster: GraphQLBoolean
    applicationIds: [ID]
}

input OAuthUpdateClientsInput
{
    id: ID
    grantType: OAuthClientGrantType
    name: GraphQLString
    secret: GraphQLString
    authUrl: GraphQLString
    redirect: GraphQLString
    scopeOptions: JSON
    expiredAccessToken: GraphQLInt
    expiredRefreshToken: GraphQLInt
    isActive: GraphQLBoolean
    isMaster: GraphQLBoolean
    applicationIds: [ID]
}

type Query
{
    oAuthFindClient(
        query: QueryStatement
        constraint: QueryStatement
    ): OAuthClient

    oAuthFindClientById(
        id: ID
        constraint: QueryStatement
    ): OAuthClient

    oAuthGetClients(
        query: QueryStatement
        constraint: QueryStatement
    ): [OAuthClient]!

    oAuthPaginateClients(
        query: QueryStatement
        constraint: QueryStatement
    ): Pagination!

}

type Mutation
{
    oAuthCreateClient(
        payload: OAuthCreateClientInput!
    ): OAuthClient

    oAuthCreateClients(
        payload: [OAuthCreateClientInput]!
    ): Boolean!

    oAuthUpdateClientById(
        payload: OAuthUpdateClientByIdInput!
        constraint: QueryStatement
    ): OAuthClient

    oAuthUpdateClients(
        payload: OAuthUpdateClientsInput!
        query: QueryStatement
        constraint: QueryStatement
    ): [OAuthClient]!

    oAuthUpsertClient(
        payload: OAuthUpdateClientByIdInput!
    ): OAuthClient

    oAuthDeleteClientById(
        id: ID!
        constraint: QueryStatement
    ): OAuthClient

    oAuthDeleteClients(
        query: QueryStatement
        constraint: QueryStatement
    ): [OAuthClient]!

}