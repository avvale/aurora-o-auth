{
    "info": {
		"_postman_id"   : "1fbad733-5928-47e8-b5e8-3c42f8a17bfb",
		"name"          : "@apps - iam/bounded-context",
		"schema"        : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
			"name": "GraphQL - iamCreateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamCreateBoundedContextInput!)\n{\n\tiamCreateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t}\n}",
                        "variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Practical Concrete Salad\", \n\t\t\"root\": \"kwsftnp5w7ginmqwgsnjei9gi9cx6\", \n\t\t\"sort\": 77220, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamCreateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:[IamCreateBoundedContextInput]!)\n{\n\tiamCreateBoundedContexts (payload:$payload)\n}",
						"variables": "{\n\t\"payload\":\n\t[\n\t\t{\n\t\t\t\"id\": \"6983c836-457c-4f98-b02b-32e4ef57eaca\", \n\t\t\t\"name\": \"Sleek Soft Soap\", \n\t\t\t\"root\": \"m3l5y3ukgkg14kbpuzdyry0b4up79\", \n\t\t\t\"sort\": 20139, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"e4908a60-7175-4f5a-8940-9b828a9e55b3\", \n\t\t\t\"name\": \"Intelligent Plastic Fish\", \n\t\t\t\"root\": \"5incop5vgau9hv1w9eppnlg2xet02\", \n\t\t\t\"sort\": 79923, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"4f195681-d234-443d-9664-7a5c073e3b74\", \n\t\t\t\"name\": \"Handmade Granite Chicken\", \n\t\t\t\"root\": \"sdzo517uerxo2ayyv78tqcuhusrdv\", \n\t\t\t\"sort\": 67322, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"927dc701-1639-476e-a306-93f1ce423c65\", \n\t\t\t\"name\": \"Rustic Cotton Bike\", \n\t\t\t\"root\": \"or6zbaat3b08fkqyw5pu8rji7tb3b\", \n\t\t\t\"sort\": 31857, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"2ea6a8e9-ecc4-47bf-8f6d-18e73b14834b\", \n\t\t\t\"name\": \"Handcrafted Wooden Car\", \n\t\t\t\"root\": \"sat418g2k1wc2pqnr7cf287dxcvea\", \n\t\t\t\"sort\": 16530, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"00071650-c9a3-4ef8-bb0d-27cd4eb22c93\", \n\t\t\t\"name\": \"Fantastic Soft Chips\", \n\t\t\t\"root\": \"8bzoltk23guw7stczuutkwq7gx9bj\", \n\t\t\t\"sort\": 85448, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"7355b02c-028c-4772-b7a1-2bc377094af4\", \n\t\t\t\"name\": \"Generic Metal Chicken\", \n\t\t\t\"root\": \"3xbduq3p9y8bi9y2gfsrzzjapb4wv\", \n\t\t\t\"sort\": 51119, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"9486b016-1b81-4999-8413-49f8397ea91a\", \n\t\t\t\"name\": \"Fantastic Steel Chips\", \n\t\t\t\"root\": \"shpb2yi522g9vxyfmmaj5iq7eugm4\", \n\t\t\t\"sort\": 12528, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"ab01310b-9486-45b5-bb28-1b9cb02701ce\", \n\t\t\t\"name\": \"Gorgeous Metal Chips\", \n\t\t\t\"root\": \"ytzslbdcb6tf566rb5y0n82aliagg\", \n\t\t\t\"sort\": 88914, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"6a878ed6-26f0-4711-8457-07d8bbac6981\", \n\t\t\t\"name\": \"Ergonomic Soft Pants\", \n\t\t\t\"root\": \"qawefc32cxg4uetrgchopec43w8ye\", \n\t\t\t\"sort\": 83919, \n\t\t\t\"isActive\": true\n\t\t}\n\t]\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamPaginateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement $constraint:QueryStatement)\n{\n\tiamPaginateBoundedContexts (query:$query constraint:$constraint)\n\t{\n\t\ttotal\n\t\tcount\n\t\trows\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamGetBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamGetBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamFindBoundedContext (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:ID)\n{\n\tiamFindBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamUpdateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamUpdateBoundedContextInput!)\n{\n\tiamUpdateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Handcrafted Plastic Chips\", \n\t\t\"root\": \"e0kfl7afemdjviitjki4gvbvb843n\", \n\t\t\"sort\": 73468, \n\t\t\"isActive\": false\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id:ID!)\n{\n\tiamDeleteBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($query:QueryStatement)\n{\n\tiamDeleteBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Ergonomic Granite Car\", \n\t\"root\": \"z69qvtihcamaqsquklpx7rf6hcss4\", \n\t\"sort\": 53979, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "[\n\t{\n\t\t\"id\": \"857cf3ec-be21-4f0d-b899-386b160d12cf\", \n\t\t\"name\": \"Generic Concrete Computer\", \n\t\t\"root\": \"6v3ou11wg5p6gf1esemsotvpv4nfa\", \n\t\t\"sort\": 23562, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"64dec437-7e00-4332-baff-f3a08b8eb98d\", \n\t\t\"name\": \"Small Wooden Car\", \n\t\t\"root\": \"jm6nl9t8he8hm28w7gbzrsdqq4qdk\", \n\t\t\"sort\": 14894, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"9854e9b3-84cc-4979-b390-6b53ce63de33\", \n\t\t\"name\": \"Gorgeous Wooden Bacon\", \n\t\t\"root\": \"wpvj0o4q6vqfwqsa0h99gjkekctws\", \n\t\t\"sort\": 15471, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"f616bba9-fd33-4344-bcc0-81f2f54805c9\", \n\t\t\"name\": \"Small Steel Tuna\", \n\t\t\"root\": \"y1iyamp1x0wbzy90tim8pfxu34yi2\", \n\t\t\"sort\": 59555, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"f13879c4-9bd1-44ff-bc95-fe69634aa861\", \n\t\t\"name\": \"Gorgeous Rubber Salad\", \n\t\t\"root\": \"jfbmz877csyx1w0cespbn8bgf2ujs\", \n\t\t\"sort\": 42729, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"1028a270-e2ca-49b2-b9d6-0bb5a53ea4c0\", \n\t\t\"name\": \"Awesome Rubber Towels\", \n\t\t\"root\": \"ojfhvzigg5nxphqret26s9fwmlnvq\", \n\t\t\"sort\": 23523, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"52bfa344-f928-40a5-bdf2-dcbf68ada3ce\", \n\t\t\"name\": \"Tasty Fresh Towels\", \n\t\t\"root\": \"fije25aixvf9h7re36kturasdve0x\", \n\t\t\"sort\": 86318, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"61d67200-a092-4616-865b-5ba0881d5b1b\", \n\t\t\"name\": \"Handcrafted Cotton Computer\", \n\t\t\"root\": \"rbizyjd3l80c6aayc6koh16a3w7j4\", \n\t\t\"sort\": 12751, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"40c50ac1-a14d-4176-b482-a8d4dba6a35a\", \n\t\t\"name\": \"Intelligent Cotton Shirt\", \n\t\t\"root\": \"uq8cxg0ee71t04tnw9myqt6f13yxj\", \n\t\t\"sort\": 16058, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"aada3e9a-8ab3-49b5-a0d3-78d23fc229e9\", \n\t\t\"name\": \"Awesome Steel Towels\", \n\t\t\"root\": \"6yqau3ypnzxvf6ioulnsk36kd8go8\", \n\t\t\"sort\": 87886, \n\t\t\"isActive\": true\n\t}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/paginate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/paginate",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
                        "bounded-contexts",
                        "paginate"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/get",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/get",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "get"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find/{id}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Rustic Wooden Bacon\", \n\t\"root\": \"qwlo2xh1gqb0xznm1hfuck7r3869g\", \n\t\"sort\": 48651, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/update",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "update"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/delete/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "delete",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
		},
        {
			"name": "REST - iam/bounded-contexts/delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/delete",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "delete"
					]
				}
			},
			"response": []
		}
    ],
    "variable": [
		{
			"id": "ea36b767-5a2a-4fd1-ae9d-40e2bd82efe5",
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}