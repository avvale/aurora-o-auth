{
    "info": {
		"_postman_id"   : "ecfbc640-d804-4902-87ed-edf99dd89c38",
		"name"          : "@apps - iam/bounded-context",
		"schema"        : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
			"name": "GraphQL - iamCreateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamCreateBoundedContextInput!)\n{\n\tiamCreateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t}\n}",
                        "variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Sleek Soft Keyboard\", \n\t\t\"root\": \"scr2or0u28ji8qjke49qq4o38ofpw\", \n\t\t\"sort\": 23220, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamCreateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:[IamCreateBoundedContextInput]!)\n{\n\tiamCreateBoundedContexts (payload:$payload)\n}",
						"variables": "{\n\t\"payload\":\n\t[\n\t\t{\n\t\t\t\"id\": \"a851d773-c4c6-468d-8b2f-f9750373c758\", \n\t\t\t\"name\": \"Generic Cotton Computer\", \n\t\t\t\"root\": \"tsv76c2ust7ppyenr55vn6qvy7d68\", \n\t\t\t\"sort\": 29551, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"6ce148fa-e005-45f1-95a5-ebc02bf4982c\", \n\t\t\t\"name\": \"Intelligent Frozen Tuna\", \n\t\t\t\"root\": \"qruvfnbkx0bmr57fahgyh4ifaivoq\", \n\t\t\t\"sort\": 74772, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"738b3e8e-343e-4a79-a673-3e2365478346\", \n\t\t\t\"name\": \"Gorgeous Concrete Soap\", \n\t\t\t\"root\": \"k8ta9vu695kf3hcup7f23is46bloj\", \n\t\t\t\"sort\": 90462, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"3605df12-4cd1-4bb3-bec8-aaca3f2b0e2f\", \n\t\t\t\"name\": \"Licensed Cotton Towels\", \n\t\t\t\"root\": \"ze8cbc0oudob2w4wn059035t3hq61\", \n\t\t\t\"sort\": 10725, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"0b351807-3178-40e4-9619-ef1788e3779d\", \n\t\t\t\"name\": \"Refined Rubber Soap\", \n\t\t\t\"root\": \"q02r3qawnvu832hwjb1y0sy26euwl\", \n\t\t\t\"sort\": 30658, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"e4512fc8-1d4a-44b8-bff1-a5a34d55e862\", \n\t\t\t\"name\": \"Licensed Concrete Tuna\", \n\t\t\t\"root\": \"uu7pvtw8ht1g8vbca01ex6n0fssl2\", \n\t\t\t\"sort\": 85097, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"2a32103f-41de-41ca-b7d0-091cfbe10e91\", \n\t\t\t\"name\": \"Small Cotton Towels\", \n\t\t\t\"root\": \"zhwdrrwf15q5aqk6kltwsxbo2y7oq\", \n\t\t\t\"sort\": 73952, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"f68430e6-93f5-4953-bdf6-ed948edea19e\", \n\t\t\t\"name\": \"Sleek Wooden Ball\", \n\t\t\t\"root\": \"eb4aszso6d2cpsc9yq17oqt9eigak\", \n\t\t\t\"sort\": 65047, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"0abdd9dd-dbcf-4ab0-9e73-c579043dd8d9\", \n\t\t\t\"name\": \"Licensed Soft Computer\", \n\t\t\t\"root\": \"o21ail43terfc5jzb1cwqahun3wm9\", \n\t\t\t\"sort\": 91207, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"c0f7f5f8-b3fb-4910-bbfe-17f4b1df1016\", \n\t\t\t\"name\": \"Fantastic Cotton Fish\", \n\t\t\t\"root\": \"2l6raoo3gg0adh46cb58iyl29pim7\", \n\t\t\t\"sort\": 35696, \n\t\t\t\"isActive\": true\n\t\t}\n\t]\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamPaginateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement $constraint:QueryStatement)\n{\n\tiamPaginateBoundedContexts (query:$query constraint:$constraint)\n\t{\n\t\ttotal\n\t\tcount\n\t\trows\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamGetBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamGetBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamFindBoundedContext (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:ID)\n{\n\tiamFindBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamUpdateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamUpdateBoundedContextInput!)\n{\n\tiamUpdateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Unbranded Granite Pizza\", \n\t\t\"root\": \"357iedsbd3l3hgnkg9waznhbvf015\", \n\t\t\"sort\": 38503, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id:ID!)\n{\n\tiamDeleteBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($query:QueryStatement)\n{\n\tiamDeleteBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Handcrafted Plastic Table\", \n\t\"root\": \"u6swdww093gi0oy606xq1swlvwakg\", \n\t\"sort\": 16104, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "[\n\t{\n\t\t\"id\": \"eed830f3-535a-4345-83cd-caa5382d7b5e\", \n\t\t\"name\": \"Tasty Granite Salad\", \n\t\t\"root\": \"zy4sibkjszr8mjkla2mwmukswnlc6\", \n\t\t\"sort\": 82075, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"2898fa4c-ef4d-4e40-bf77-f26e6ee3cb41\", \n\t\t\"name\": \"Handmade Granite Salad\", \n\t\t\"root\": \"rpgv17rxd6k5hm13kdxum2my1001q\", \n\t\t\"sort\": 91063, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"9b6cb742-05aa-46ba-ba3c-addb5284d019\", \n\t\t\"name\": \"Sleek Frozen Shoes\", \n\t\t\"root\": \"7p596r4hb2btgy1mtdx62400sg1ci\", \n\t\t\"sort\": 45919, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"5ec4a790-9fdf-466d-b450-9631d17e5529\", \n\t\t\"name\": \"Handcrafted Cotton Pizza\", \n\t\t\"root\": \"wory3bjww0ryi6lfthhk8eejbwro2\", \n\t\t\"sort\": 15646, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"b04234b1-f04a-4ceb-b18f-a956eb1b2ada\", \n\t\t\"name\": \"Ergonomic Wooden Computer\", \n\t\t\"root\": \"bcgl7vl24rci5dk854fka097xzpwe\", \n\t\t\"sort\": 27641, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"93e0baae-b0e9-4eba-aee3-a7953dbbc8b7\", \n\t\t\"name\": \"Tasty Plastic Tuna\", \n\t\t\"root\": \"xk3lbgdyifni9rngckts4oeyajz4x\", \n\t\t\"sort\": 65501, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"717d64bb-e000-4057-97eb-483add3e8742\", \n\t\t\"name\": \"Small Granite Chicken\", \n\t\t\"root\": \"25feub5iowuff9kzezosll2ecmxd6\", \n\t\t\"sort\": 63970, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"a582ec1d-3d5b-460d-a850-6e72c7361e93\", \n\t\t\"name\": \"Awesome Wooden Chicken\", \n\t\t\"root\": \"4uvk1r970omynfjar5izcwh6f896u\", \n\t\t\"sort\": 83562, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"a60536e4-7964-401e-b535-301b32b9cd85\", \n\t\t\"name\": \"Ergonomic Metal Table\", \n\t\t\"root\": \"kh9n9bhjbadvz10al4nftht8ykhse\", \n\t\t\"sort\": 47798, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"5e844041-9f5e-4fd3-8152-44d6b07727a2\", \n\t\t\"name\": \"Handmade Fresh Pizza\", \n\t\t\"root\": \"z3hylwwbzj3ysopx5efki3za4nacw\", \n\t\t\"sort\": 14561, \n\t\t\"isActive\": true\n\t}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/paginate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/paginate",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
                        "bounded-contexts",
                        "paginate"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/get",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/get",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "get"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find/{id}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Generic Rubber Towels\", \n\t\"root\": \"iboul4ncqag31521bu1ijg8j3h7sg\", \n\t\"sort\": 36891, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/update",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "update"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/delete/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "delete",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
		},
        {
			"name": "REST - iam/bounded-contexts/delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/delete",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "delete"
					]
				}
			},
			"response": []
		}
    ],
    "variable": [
		{
			"id": "b8296def-2176-4094-9b49-f43e294bbf8e",
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}