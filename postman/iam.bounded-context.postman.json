{
    "info": {
		"_postman_id"   : "c6ea3357-092d-4668-aaed-b62ea7860fae",
		"name"          : "@apps - iam/bounded-context",
		"schema"        : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
			"name": "GraphQL - iamCreateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamCreateBoundedContextInput!)\n{\n\tiamCreateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t}\n}",
                        "variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Handmade Frozen Gloves\", \n\t\t\"root\": \"g5lx4zi3cydc137y6i9udiszjggm5\", \n\t\t\"sort\": 39399, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamCreateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:[IamCreateBoundedContextInput]!)\n{\n\tiamCreateBoundedContexts (payload:$payload)\n}",
						"variables": "{\n\t\"payload\":\n\t[\n\t\t{\n\t\t\t\"id\": \"535807e8-3f61-4f33-8943-669716d6c7a9\", \n\t\t\t\"name\": \"Rustic Wooden Soap\", \n\t\t\t\"root\": \"pkal8omd853ia9rsxovhbhcqyzzg0\", \n\t\t\t\"sort\": 25630, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"f808d22a-9fff-402c-be98-b495f64d81ed\", \n\t\t\t\"name\": \"Awesome Cotton Computer\", \n\t\t\t\"root\": \"46sqrdup9l49iogh68nicimt1jezd\", \n\t\t\t\"sort\": 55284, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"7fa7f8fe-60b2-4f1d-91a9-d447949f1efb\", \n\t\t\t\"name\": \"Handmade Steel Bacon\", \n\t\t\t\"root\": \"kte1wded85jf6qcy33aaveb5f4r43\", \n\t\t\t\"sort\": 72097, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"18c6ce55-7b70-47d4-a30b-df9777b153b9\", \n\t\t\t\"name\": \"Handmade Rubber Pants\", \n\t\t\t\"root\": \"rau5wq4kbxaq8dkud1o0q7mq9twr3\", \n\t\t\t\"sort\": 83812, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"d8c91519-4e81-4707-97d6-4f96990ad7c4\", \n\t\t\t\"name\": \"Small Cotton Pizza\", \n\t\t\t\"root\": \"h0pq7l8k6redqksfu2sy88k2v8xnu\", \n\t\t\t\"sort\": 30736, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"e1798181-ed92-420e-9e05-50cda4ab740d\", \n\t\t\t\"name\": \"Awesome Metal Mouse\", \n\t\t\t\"root\": \"ttp1wxqlck8yg3c1oi1d5bu3kggn3\", \n\t\t\t\"sort\": 74859, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"c7a506d3-e3b4-4a31-9e6c-36b8b9b1cdaf\", \n\t\t\t\"name\": \"Handmade Concrete Soap\", \n\t\t\t\"root\": \"qm6y4lhgg23lsu17nl0l9tvlrwizb\", \n\t\t\t\"sort\": 46822, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"f2da5ebd-5dde-438f-9ca0-3c63155c7fae\", \n\t\t\t\"name\": \"Handcrafted Concrete Ball\", \n\t\t\t\"root\": \"kib3b43ch8h9oyua9o200s18j00og\", \n\t\t\t\"sort\": 21349, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"1a42cdf5-152c-4116-8ce9-498dcfbce33c\", \n\t\t\t\"name\": \"Incredible Granite Cheese\", \n\t\t\t\"root\": \"relzsthu6w2zeblncxw5bhqngvoi0\", \n\t\t\t\"sort\": 10981, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"be6408a1-d5a1-46e4-a376-c41c30a28b6f\", \n\t\t\t\"name\": \"Generic Granite Pizza\", \n\t\t\t\"root\": \"j45vgbktfkchatz5ugngypliyjdyi\", \n\t\t\t\"sort\": 17441, \n\t\t\t\"isActive\": true\n\t\t}\n\t]\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamPaginateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement $constraint:QueryStatement)\n{\n\tiamPaginateBoundedContexts (query:$query constraint:$constraint)\n\t{\n\t\ttotal\n\t\tcount\n\t\trows\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamGetBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamGetBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamFindBoundedContext (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:ID)\n{\n\tiamFindBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamUpdateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamUpdateBoundedContextInput!)\n{\n\tiamUpdateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Unbranded Fresh Sausages\", \n\t\t\"root\": \"azndspowyurtxnz5j9m5b8scn7o54\", \n\t\t\"sort\": 88535, \n\t\t\"isActive\": false\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id:ID!)\n{\n\tiamDeleteBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($query:QueryStatement)\n{\n\tiamDeleteBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Generic Metal Ball\", \n\t\"root\": \"fklef8jzcofib3dr5mm2akzom3zo9\", \n\t\"sort\": 32768, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "[\n\t{\n\t\t\"id\": \"e057e9ce-c293-42f5-a09f-1fe7bffdb286\", \n\t\t\"name\": \"Licensed Fresh Cheese\", \n\t\t\"root\": \"h7c03o380j3609bbda2bj93ym3wh1\", \n\t\t\"sort\": 53824, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"fe6c1a26-9984-48fa-a8fe-56cc839e17f6\", \n\t\t\"name\": \"Small Fresh Table\", \n\t\t\"root\": \"oss8u0njvb2j2x0key7w937d1orxt\", \n\t\t\"sort\": 55462, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"41bdc60d-0f16-4732-ae06-702546576d4d\", \n\t\t\"name\": \"Fantastic Fresh Chicken\", \n\t\t\"root\": \"30gj9xp72ormy37bj8ar2102uyetw\", \n\t\t\"sort\": 14941, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"c5d60768-760f-4f70-be10-ebe3bf464396\", \n\t\t\"name\": \"Sleek Plastic Shirt\", \n\t\t\"root\": \"1f23mknpzutbpqhkg2yai0b2nhvui\", \n\t\t\"sort\": 82320, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"67c61e97-0fdd-4127-a055-900a03a3ede5\", \n\t\t\"name\": \"Ergonomic Plastic Chips\", \n\t\t\"root\": \"oh47vyv4es6e32dve8buldfp4iq8j\", \n\t\t\"sort\": 51930, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"0124b4a5-f10a-44c4-a9a0-cc9931f805ef\", \n\t\t\"name\": \"Awesome Cotton Keyboard\", \n\t\t\"root\": \"aauztrwura1pk4fn1vvb0gh9ec8fh\", \n\t\t\"sort\": 94278, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"b4c80e16-67aa-4aa3-b0b7-df435f7c97a8\", \n\t\t\"name\": \"Handcrafted Soft Pizza\", \n\t\t\"root\": \"smicqx1h5omj90g9k9dy51j45shu9\", \n\t\t\"sort\": 48275, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"5e9a91be-89d1-4b88-8841-037e17c18177\", \n\t\t\"name\": \"Generic Fresh Chair\", \n\t\t\"root\": \"te0i1849j5ie8l2bs9b0jw5o5jr8v\", \n\t\t\"sort\": 54916, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"260ece76-928e-488a-80b4-c96251490131\", \n\t\t\"name\": \"Small Soft Towels\", \n\t\t\"root\": \"zae5d3xdolb17k8odz719l6kph7zx\", \n\t\t\"sort\": 61435, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"da83546e-3495-4945-ac4f-8def64f24db6\", \n\t\t\"name\": \"Sleek Steel Chicken\", \n\t\t\"root\": \"ktfom4rb680voszwbl5tj6xk7rsza\", \n\t\t\"sort\": 54623, \n\t\t\"isActive\": true\n\t}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/paginate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/paginate",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
                        "bounded-contexts",
                        "paginate"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/get",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/get",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "get"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find/{id}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Unbranded Rubber Chicken\", \n\t\"root\": \"qr9lj92ue02cucsccs88p6idiju5y\", \n\t\"sort\": 13114, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/update",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "update"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/delete/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "delete",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
		},
        {
			"name": "REST - iam/bounded-contexts/delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/delete",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "delete"
					]
				}
			},
			"response": []
		}
    ],
    "variable": [
		{
			"id": "e9263a1b-6d0c-4ff1-aca8-90540bbe853d",
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}